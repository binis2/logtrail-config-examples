input {
	tcp {
	    port => 5000
	    type => syslog
	}
	udp { 
		port => 5000
		type => syslog
	}
}
filter {
	grok {
		match => {
#			"message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:syslog_message}"


# If syslog is format is "<%PRI%><%syslogfacility%>%TIMESTAMP% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
			"message" => "<?%{NONNEGINT:priority}><%{NONNEGINT:facility}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:syslog_message}"

		}
	}
	date {
		match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
	}
	ruby {
      code =>  "event.set('level',event.get('priority').to_i - ( event.get('facility').to_i * 8 ))"
  }
}

output {
	elasticsearch {
		hosts => ["localhost:9200"]
		index => "logstash-syslog"
	}
	stdout {
		codec => rubydebug
	}
}
